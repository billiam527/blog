<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Histogram on Bill&#39;s Data Science Blog</title>
    <link>/tags/histogram/</link>
    <description>Recent content in Histogram on Bill&#39;s Data Science Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/histogram/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a Dashboard to Display Visualizations</title>
      <link>/post/creating-a-dashboard-to-display-visualizations/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/creating-a-dashboard-to-display-visualizations/</guid>
      <description>Today we will look at how to create a dashboard. In previous posts we went over how to extract and display data. Please see Data Visualization Using a Histogram, Data Visualization Using a Time Series, and Data Visualization Using a Scatter Plot for more detailed posts on their respective topics.
The code we will need to use today is as follows:
library(flexdashboard)library(Lahman)library(dplyr)library(ggplot2)result&amp;lt;-Batting%&amp;gt;%filter(playerID==&amp;quot;ruthba01&amp;quot;)%&amp;gt;%select(yearID,SO,HR)#Scatter plot-------------------------------ggplot()+geom_point(data=result,aes(x=SO,y=HR))+xlab(&amp;quot;Strikeouts&amp;quot;)+ylab(&amp;quot;Homeruns&amp;quot;)#Histogram----------------------------------ggplot()+geom_histogram(data=result,aes(x=HR), bins=5, color=&amp;quot;blue&amp;quot;, fill=&amp;quot;white&amp;quot;)+xlab(&amp;quot;Homeruns&amp;quot;)#Time Series------------------------------------------------------------------ggplot()+geom_point(data=result,aes(x=yearID,y=HR))+geom_line(data=result,aes(x=yearID,y=HR))+xlab(&amp;quot;Year&amp;quot;)+ylab(&amp;quot;Homeruns&amp;quot;)We will load this code into an R markdown file and use a Flex Dashboard format.</description>
    </item>
    
  </channel>
</rss>